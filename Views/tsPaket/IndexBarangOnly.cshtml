@{
    ViewData["Title"] = ViewBag.Title;
    var Penyedia = "#penyedia";
    List<object> detailPaket = new List<object>();
    detailPaket.Add(new { type = "userstatus", buttonOption = new { content = " Identifikasi", cssClass = "e-flat e-details feather icon-layers" } }); // custom
    List<string> Toolbar = HttpContextAccessor.HttpContext.Session.GetComplexData<List<string>>("Toolbar");
}

<div class="content-header-left col-md-9 col-12 mb-2">
    <div class="row breadcrumbs-top">
        <div class="col-12">
            <h2 class="content-header-title float-left mb-0">Identifikasi Pengadaan Barang Jasa</h2>
            <div class="breadcrumb-wrapper col-12">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a href="#">Paket</a>
                    </li>
                    <li class="breadcrumb-item active">
                        @ViewBag.Title
                    </li>
                </ol>
            </div>
        </div>
    </div>
</div>

<ejs-toast id="toast_default" created="createdToasObj">
    <e-toast-position X="Right"></e-toast-position>
</ejs-toast>

<div id="penyedia" style="display: none">
    <ejs-grid id="GridPenyedia" actionComplete="CompleteActionPenyedia" height="490" allowPaging="true" allowResizing="true" allowSorting="true" allowReordering="true" allowGrouping="false"
              toolbar="@Toolbar" allowFiltering="true" allowSelection="true"
              created="createdGridPenyedia" allowExcelExport="true" allowPdfExport="true" toolbarClick="toolbarAction" query="@ViewBag.queryPenyedia" commandClick="cmdDetail">
        <e-grid-pagesettings pageCount="5" pageSize="12" pageSizes="true"></e-grid-pagesettings>
        <e-grid-filterSettings type="Menu"></e-grid-filterSettings>
        <e-grid-editSettings allowAdding="true" allowDeleting="true" allowEditing="true" mode="Dialog" template='#templatedialog' showDeleteConfirmDialog="true"></e-grid-editSettings>
        <e-grid-selectionsettings type="Single"></e-grid-selectionsettings>
        <e-grid-columns>
            <e-grid-column field="idpaket" headerText="idpaket" isPrimaryKey="true" isIdentity="true" visible="false"></e-grid-column>
            <e-grid-column field="namaopd" headerText="Unit" width="200"></e-grid-column>
            <e-grid-column field="nmpaket" headerText="Nama Paket"></e-grid-column>
            <e-grid-column field="pagusblm" width="150" headerText="Pagu" format="n0"></e-grid-column>
            <e-grid-column field="statuspaket" width="150" headerText="Status"></e-grid-column>
            <e-grid-column headerText="Manage Records" width="150" commands="detailPaket"></e-grid-column>
        </e-grid-columns>
    </ejs-grid>
</div>

<ejs-tab id="adaptiveTab" heightAdjustMode="None" height="250px" created="tabPaket">
    <e-tab-tabitems>
        <e-tab-tabitem header="ViewBag.headerPenyedia" content="@Penyedia"></e-tab-tabitem>
    </e-tab-tabitems>
</ejs-tab>

@section SectionControls{
    <script id='templatedialog' type="text/x-template">
        <div id="Tempdialog">
        </div>
    </script>

    <script type="text/javascript">
        var toastObj;
        var flag = true;
        var dataStrngNew;

        function createdToasObj() {
            toastObj = this;
        }

        function tabPaket() {
            tabObj = document.getElementById('adaptiveTab').ej2_instances[0];
        }

        function paramToast(title, cssclass, message) {
            setTimeout(
                () => {
                    var toastObj = document.getElementById('toast_default').ej2_instances[0];
                    toastObj.title = title;
                    toastObj.cssClass = cssclass;
                    toastObj.content = message;
                    toastObj.target = document.body;
                    toastObj.show();
                }, 500);
        }

        function cmdDetail(args) {
            //alert(JSON.parse(JSON.stringify(args.rowData)).ididetifikasi)
            window.location.href = "@ViewBag.identifikasi" + JSON.parse(JSON.stringify(args.rowData)).idpaket;
        }

        //#region penyedia
        function CompleteActionPenyedia(args) {
            var grid = document.querySelector('#GridPenyedia').ej2_instances[0];

            if (args.requestType === 'beginEdit' || args.requestType === 'add') {
                var dialog = args.dialog;
                dialog.height = 750;
                dialog.width = "1024px";
                // change the header of the dialog
                dialog.header = args.requestType === 'beginEdit' ? 'Sunting Paket Penyedia @ViewBag.Title' : 'Tambah Paket Penyedia @ViewBag.Title';
                args.form.ej2_instances[0].addRules('prodlmnegeri', { required: [true, 'Silahkan Pilih Produk Dalam Negeri'] });
                args.form.ej2_instances[0].addRules('ushkecil', { required: [true, 'Silahkan Pilih Usaha Kecil'] });
                args.form.ej2_instances[0].addRules('pradpa', { required: [true, 'Silahkan Pilih Pra DIPA/ DPA'] });
                args.form.ej2_instances[0].addRules('mtdpemilihanstblm', { required: [true, 'Silahkan Pilih Metode Pemilihan'] });
                args.form.ej2_instances[0].addRules('paketstrategis', { required: [true, 'Silahkan Pilih Paket Strategis'] });

                args.form.ej2_instances[0].addRules('pemanfaatanmulai', { required: [true, 'Silahkan Pilih Waktu Pemanfaatan'] });
                args.form.ej2_instances[0].addRules('pemanfaatanakhir', { required: [true, 'Silahkan Pilih Waktu Pemanfaatan'] });
                args.form.ej2_instances[0].addRules('pelaksanaanmulai', { required: [true, 'Silahkan Pilih Waktu Pelaksanaan'] });
                args.form.ej2_instances[0].addRules('pelaksanaanakhir', { required: [true, 'Silahkan Pilih Waktu Pelaksanaan'] });
                args.form.ej2_instances[0].addRules('pemilihanmulai', { required: [true, 'Silahkan Pilih Waktu Pemilihan'] });
                args.form.ej2_instances[0].addRules('pemilihanakhir', { required: [true, 'Silahkan Pilih Waktu Pemilihan'] });

                let spinner = ej.popups.createSpinner({ target: args.dialog.element });
                ej.popups.showSpinner(args.dialog.element);
                var ajax = new ej.base.Ajax({
                    url: "@Url.Action("PaketBarangTemplate", "Paket")", //render the partial view
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify({ value: args.rowData })
                });
                ajax.send().then(function (data) {
                    appendElement(data, args.form); //Render the edit form with selected record
                    args.form.elements.namedItem('nmpaket').focus();
                    if (typeof args.rowData['idkonsolidasi'] != 'undefined') {
                        var dropObject = document.getElementById("idkonsolidasi").ej2_instances[0];
                        dropObject.value = args.rowData['idkonsolidasi'];
                        dropObject.text = args.rowData['namakonsolidasi'];
                    }
                    //if (typeof args.rowData['idbrgkerj'] != 'undefined') {
                    //    var dropObject = document.getElementById("idbrgkerj").ej2_instances[0];
                    //    dropObject.value = args.rowData['idbrgkerj'];
                    //    dropObject.text = args.rowData['namabrgkerj'];
                    //}
                    ej.popups.hideSpinner(args.dialog.element);
                }).catch(function (xhr) {

                    ej.popups.hideSpinner(args.dialog.element);
                });
            }
            else if (args.requestType === 'save') {
                grid.refresh();
                grid.closeEdit();
            }
        }

        function createdGridPenyedia(args) {
            class CustomAdaptor extends ej.data.UrlAdaptor {
                processResponse(data, ds, query, xhr, request, changes) {
                    if (!ej.base.isNullOrUndefined(data.message)) {
                        if ((data.message.indexOf('BERHASIL DISIMPAN') == -1) && (data.message.indexOf('BERHASIL DIHAPUS') == -1)) {
                            paramToast('Kesalahan Paket Penyedia @ViewBag.Title', 'e-toast-danger', data.message);
                        }
                        else {
                            paramToast('Paket Penyedia @ViewBag.Title', 'e-toast-success', data.message);
                        }
                    }

                    if (!ej.base.isNullOrUndefined(data.data))
                        return data.data;
                    else
                        return data;
                };
            }
            var grid = document.querySelector('#GridPenyedia').ej2_instances[0];
            grid.dataSource = new ej.data.DataManager({
                url: "/Paket/PaketAll",
                crudUrl: "/Paket/PaketCrud",
                adaptor: new CustomAdaptor()
            });
        }
        //#endregion penyedia

        function onfilteringPaket(e) {
            var SelectObj = document.getElementById("idpaket").ej2_instances[0];
            if (e.text == '' && e.text.length < 3) {
                e.updateData(SelectObj.dataSource);
            }

            let query = new ej.data.Query().select(['nmpaket', 'idpaket']).take(6);
            query = (e.text !== '' && e.text.length >= 3) ? query.where('nmpaket', 'contains', e.text, true) : query;

            e.updateData(SelectObj.dataSource, query);
        }

        function appendElement(elementString, form) {
            form.querySelector("#Tempdialog").innerHTML = elementString;
            var script = document.createElement('script');
            script.type = "text/javascript";
            var serverScript = form.querySelector("#Tempdialog").querySelector('script');
            script.textContent = serverScript.innerHTML;
            document.head.appendChild(script);
            serverScript.remove();
        }

        function toolbarAction(args) {
            var fileNameGrid = "";

            if (this.element.id === "GridPenyedia") {
                fileNameGrid = "Penyedia";
            }

            var fileName = "Paket " + fileNameGrid + " @ViewBag.Title";

            if (args.item.id === this.element.id + '_pdfexport') {
                var exportProperties = {
                    fileName: fileName + ".pdf"
                };

                this.pdfExport(exportProperties);
            }
            if (args.item.id === this.element.id + '_excelexport') {
                var exportProperties = {
                    fileName: fileName + ".xlsx"
                };

                this.excelExport(exportProperties);
            }
        }
    </script>
}